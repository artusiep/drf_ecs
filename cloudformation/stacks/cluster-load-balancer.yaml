---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template creates Application Load Balancer. ALB will be used to route
  traffic to containers spawned by ECS.

Parameters:

  AppName:
    Description: >
      This will be app name
    Type: String

  Environment:
    Description: >
      This points out which environment is used.
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
    ConstraintDescription: >
      Must be one of the defined allowed values.

Resources:

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AppName}-${Environment}
      VpcId:
        Fn::ImportValue:
          !Sub hb-tracking-cluster-vpc-resource-id-${AWS::Region}-${Environment}
      Port: 8080
      Protocol: HTTP
      HealthCheckPath: /status

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              !Sub hb-tracking-cluster-public-subnets-list-${AWS::Region}-${Environment}
      SecurityGroups:
        - Fn::ImportValue:
            !Sub ${AppName}-${Environment}-cluster-load-balancer-security-group-id-${AWS::Region}
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-${Environment}-load-balancer

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 8080
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup

Outputs:

  DefaultTargetGroupArn:
    Description: Arn of Target Group.
    Value: !Ref DefaultTargetGroup
    Export:
      Name: !Sub ${AppName}-${Environment}-cluster-default-target-group-arn-${AWS::Region}

  LoadBalancerArn:
    Description: Arn of Load Balancer.
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub ${AppName}-${Environment}-cluster-load-balancer-arn-${AWS::Region}
